{"ast":null,"code":"import axios from \"axios\";\nimport { loadStripe } from \"@stripe/stripe-js\";\n// GET\nexport const getProducts = () => {\n  return new Promise((onSuccess, onFail) => {\n    axios.get(\"/api/products\").then((response, error) => {\n      if (!response || error) {\n        return onFail(`Response failure : ${error}`);\n      }\n      onSuccess(response);\n    }).catch(err => onFail(err));\n  });\n};\nexport const getUser = body => {\n  return new Promise((onSuccess, onFail) => {\n    console.log(body.profile); // realm return an object with user's profile details and email, we use the email to identify the user connected and retrieve profile details\n    // check the object in the console to see properties\n    axios.get(`/api/user/${body.profile.email}`, {\n      params: {\n        email: body.profile.email\n      }\n    }).then((response, error) => {\n      if (!response || error) {\n        return onFail(`Response failure : ${error}`);\n      }\n      onSuccess(response.data);\n    }).catch(err => onFail(err));\n  });\n};\n\n// POST\nexport const addUser = body => {\n  return new Promise((onSuccess, onFail) => {\n    axios.post(\"/api/users/add\", body).then((response, error) => {\n      if (!response || error) {\n        return onFail(`Response failure : ${error}`);\n      }\n      onSuccess(`user profile successfully created`);\n    }).catch(err => onFail(err));\n  });\n};\nexport const addOrder = body => {\n  return new Promise((onSuccess, onFail) => {\n    axios.post(\"/api/orders/add\", body).then((response, error) => {\n      if (!response || error) {\n        return onFail(`Response failure : ${error}`);\n      }\n      onSuccess(`order successfully saved`);\n    }).catch(err => onFail(err));\n  });\n};\n\n//stripe\nexport const processPayment = async order => {\n  var stripePromise = loadStripe(\"pk_test_Y5ScLHaUyFGQYd13cNJeEMFx\");\n  const stripe = await stripePromise;\n  axios.post(\"api/create-checkout-session\", order).then(response => {\n    const sessionID = response.data.id;\n    return stripe.redirectToCheckout({\n      sessionId: sessionID\n    });\n  });\n};","map":{"version":3,"names":["axios","loadStripe","getProducts","Promise","onSuccess","onFail","get","then","response","error","catch","err","getUser","body","console","log","profile","email","params","data","addUser","post","addOrder","processPayment","order","stripePromise","stripe","sessionID","id","redirectToCheckout","sessionId"],"sources":["C:/Users/mon pc/Downloads/final/final/marketplace/client/src/lib/service/index.js"],"sourcesContent":["import axios from \"axios\";\nimport { loadStripe } from \"@stripe/stripe-js\";\n// GET\nexport const getProducts = () => {\n  return new Promise((onSuccess, onFail) => {\n    axios\n      .get(\"/api/products\")\n      .then((response, error) => {\n        if (!response || error) {\n          return onFail(`Response failure : ${error}`);\n        }\n        onSuccess(response);\n      })\n      .catch((err) => onFail(err));\n  });\n};\n\nexport const getUser = (body) => {\n  return new Promise((onSuccess, onFail) => {\n    console.log(body.profile) // realm return an object with user's profile details and email, we use the email to identify the user connected and retrieve profile details\n    // check the object in the console to see properties\n    axios\n      .get(`/api/user/${body.profile.email}`,  {\n        params: {\n          email: body.profile.email\n        }\n      }) \n      .then((response, error) => {\n        if (!response || error) {\n          return onFail(`Response failure : ${error}`);\n        }\n        onSuccess(response.data);\n      })\n      .catch((err) => onFail(err));\n  });\n};\n\n// POST\nexport const addUser = (body) => {\n  return new Promise((onSuccess, onFail) => {\n    axios\n      .post(\"/api/users/add\", body)\n      .then((response, error) => {\n        if (!response || error) {\n          return onFail(`Response failure : ${error}`);\n        }\n        onSuccess(`user profile successfully created`);\n      })\n      .catch((err) => onFail(err));\n  });\n};\n\nexport const addOrder = (body) => {\n  return new Promise((onSuccess, onFail) => {\n    axios\n      .post(\"/api/orders/add\", body)\n      .then((response, error) => {\n        if (!response || error) {\n          return onFail(`Response failure : ${error}`);\n        }\n        onSuccess(`order successfully saved`);\n      })\n      .catch((err) => onFail(err));\n  });\n};\n\n//stripe\nexport const processPayment = async (order) => {\n  var stripePromise = loadStripe(\"pk_test_Y5ScLHaUyFGQYd13cNJeEMFx\");\n  const stripe = await stripePromise;\n  axios.post(\"api/create-checkout-session\", order).then((response) => {\n    const sessionID = response.data.id;\n    return stripe.redirectToCheckout({ sessionId: sessionID });\n  });\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}